"""initial

Revision ID: ac13307b2ddd
Revises: 
Create Date: 2019-10-04 16:47:28.476823

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ac13307b2ddd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('texts_Author',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('death_date', sa.Date(), nullable=True),
    sa.Column('nationality', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('slug')
    )
    op.create_table('texts_PoetryFoundationData',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('classification', sa.String(), nullable=True),
    sa.Column('keywords', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('period', sa.String(), nullable=True),
    sa.Column('reference', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('texts_TextGenre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('texts_TextLabel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('texts_Collection',
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('author_slug', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['author_slug'], ['texts_Author.slug'], ),
    sa.PrimaryKeyConstraint('slug')
    )
    op.create_table('texts_Text',
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('year', sa.String(), nullable=True),
    sa.Column('lines', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('raw', sa.Text(), nullable=True),
    sa.Column('author_slug', sa.String(), nullable=True),
    sa.Column('collection_slug', sa.String(), nullable=True),
    sa.Column('poetry_foundation_data_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_slug'], ['texts_Author.slug'], ),
    sa.ForeignKeyConstraint(['collection_slug'], ['texts_Collection.slug'], ),
    sa.ForeignKeyConstraint(['poetry_foundation_data_id'], ['texts_PoetryFoundationData.id'], ),
    sa.PrimaryKeyConstraint('slug', 'version')
    )
    op.create_table('texts_TextDependencyParse',
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('text_slug', sa.String(), nullable=True),
    sa.Column('text_version', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['text_slug', 'text_version'], ['texts_Text.slug', 'texts_Text.version'], ),
    sa.PrimaryKeyConstraint('id', 'version')
    )
    op.create_table('texts_TextLabelRelation',
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text_slug', sa.String(), nullable=False),
    sa.Column('text_version', sa.Integer(), nullable=False),
    sa.Column('label_id', sa.Integer(), nullable=False),
    sa.Column('commentary', sa.String(), nullable=True),
    sa.Column('text_index', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['label_id'], ['texts_TextLabel.id'], ),
    sa.ForeignKeyConstraint(['text_slug', 'text_version'], ['texts_Text.slug', 'texts_Text.version'], ),
    sa.PrimaryKeyConstraint('id', 'version', 'text_slug', 'text_version', 'label_id'),
    sa.UniqueConstraint('id', 'version', name='text_label_version')
    )
    op.create_table('texts_TextPartsOfSpeech',
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('text_slug', sa.String(), nullable=True),
    sa.Column('text_version', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['text_slug', 'text_version'], ['texts_Text.slug', 'texts_Text.version'], ),
    sa.PrimaryKeyConstraint('id', 'version')
    )
    op.create_table('texts_TextToTextRelation',
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('from_text_slug', sa.String(), nullable=False),
    sa.Column('from_text_version', sa.Integer(), nullable=False),
    sa.Column('to_text_slug', sa.String(), nullable=False),
    sa.Column('to_text_version', sa.Integer(), nullable=False),
    sa.Column('commentary', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['from_text_slug', 'from_text_version'], ['texts_Text.slug', 'texts_Text.version'], name='from_text'),
    sa.ForeignKeyConstraint(['to_text_slug', 'to_text_version'], ['texts_Text.slug', 'texts_Text.version'], name='to_text'),
    sa.PrimaryKeyConstraint('id', 'version', 'from_text_slug', 'from_text_version', 'to_text_slug', 'to_text_version'),
    sa.UniqueConstraint('id', 'version', name='text_to_text_rel_version')
    )
    op.create_table('texts_TextTokens',
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('text_slug', sa.String(), nullable=True),
    sa.Column('text_version', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['text_slug', 'text_version'], ['texts_Text.slug', 'texts_Text.version'], ),
    sa.PrimaryKeyConstraint('id', 'version')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('texts_TextTokens')
    op.drop_table('texts_TextToTextRelation')
    op.drop_table('texts_TextPartsOfSpeech')
    op.drop_table('texts_TextLabelRelation')
    op.drop_table('texts_TextDependencyParse')
    op.drop_table('texts_Text')
    op.drop_table('texts_Collection')
    op.drop_table('texts_TextLabel')
    op.drop_table('texts_TextGenre')
    op.drop_table('texts_PoetryFoundationData')
    op.drop_table('texts_Author')
    # ### end Alembic commands ###
